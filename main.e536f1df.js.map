{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tBody","headCells","rows","children","tHead","addEventListener","action","index","indexOf","target","newOrder","targetCell","closest","headCellCondition","classList","contains","sort","a","b","contentA","textContent","contentB","numA","replace","numB","isNaN","localeCompare","forEach","cell","remove","toggle","append","e","currentTarget","row","add","insertAdjacentHTML","form","elements","pushNotification","posTop","posRight","title","description","type","message","createElement","dataset","qa","style","top","right","innerHTML","body","setTimeout","validation","value","length","match","preventDefault","salary","formatedSalary","toLocaleString","targetData","input","targetDataValue","width","window","getComputedStyle","focus","blurEvent"],"mappings":"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","file":"main.e536f1df.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// create and sort table\nconst table = document.querySelector('table');\nconst tBody = document.querySelector('tbody');\nconst headCells = table.rows[0].children;\n\n// click on thead\ntable.tHead.addEventListener('click', action => {\n  const index = [...headCells].indexOf(action.target);\n  const newOrder = [...tBody.children];\n  const targetCell = action.target.closest('th');\n  const headCellCondition = targetCell.classList.contains('js-active-head');\n\n  newOrder.sort((a, b) => {\n    const contentA = a.children[index].textContent;\n    const contentB = b.children[index].textContent;\n\n    // sort by salary\n    if (contentA[0] === '$') {\n      const numA = contentA.replace(/\\D/g, '');\n      const numB = contentB.replace(/\\D/g, '');\n\n      return headCellCondition\n        ? numB - numA\n        : numA - numB;\n    }\n\n    // strings sort\n    if (isNaN(contentA)) {\n      return headCellCondition\n        ? contentB.localeCompare(contentA)\n        : contentA.localeCompare(contentB);\n    }\n\n    // nums sort\n    return headCellCondition\n      ? +contentB - +contentA\n      : +contentA - +contentB;\n  });\n\n  [...headCells].forEach(cell => {\n    if (cell === targetCell) {\n      return;\n    }\n\n    cell.classList.remove('js-active-head');\n  });\n\n  targetCell.classList.toggle('js-active-head');\n\n  tBody.append(...newOrder);\n});\n\n// row click\ntBody.addEventListener('click', e => {\n  const currentTarget = e.target.closest('tr');\n\n  [...tBody.children].forEach(row => row.classList.remove('active'));\n  currentTarget.classList.add('active');\n});\n\n// create form\ntable.insertAdjacentHTML(\n  'afterend',\n  `\n  <form class=\"new-employee-form\" method=\"post\">\n    <label>\n      Name:\n      <input data-qa=\"name\" name=\"name\" type=\"text\">\n    </label>\n\n    <label>\n      Position:\n      <input data-qa=\"position\" name=\"position\" type=\"text\">\n    </label>\n\n    <label>\n      Office:\n      <select data-qa=\"office\" name=\"office\">\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\"></option>\n      </select>\n    </label>\n\n    <label>\n      Age:\n      <input data-qa=\"age\" name=\"age\" type=\"number\">\n    </label>\n\n    <label>\n      Salary:\n      <input data-qa=\"salary\" name=\"salary\" type=\"number\">\n    </label>\n\n    <button name=\"button\">Save to table</button>\n  </form>\n  `\n);\n\nconst form = document.querySelector('.new-employee-form').elements;\n\n// notifications\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const message = document.createElement('div');\n\n  message.classList.add('notification', `${type}`);\n  message.dataset.qa = 'notification';\n  message.style.top = `${posTop}px`;\n  message.style.right = `${posRight}px`;\n\n  message.innerHTML\n  = `\n    <h2 class=\"title\">${title}</h2>\n    <p>${description}</p>\n  `;\n\n  document.body.append(message);\n\n  setTimeout(() => message.remove(), 3000);\n};\n\n// form button click\nform['button'].addEventListener('click', e => {\n  e.preventDefault();\n\n  if (validation() === false) {\n    return;\n  };\n\n  const salary = +form['salary'].value.replace(/\\D/g, '');\n  const formatedSalary = '$' + salary.toLocaleString('en-US');\n\n  tBody.insertAdjacentHTML(\n    'beforeend',\n    `\n      <tr>\n        <td>${form['name'].value}</td>\n        <td>${form['position'].value}</td>\n        <td>${form['office'].value}</td>\n        <td>${form['age'].value}</td>\n        <td>${formatedSalary}</td>\n      </tr>\n    `\n  );\n\n  form['name'].value = '';\n  form['position'].value = '';\n  form['age'].value = '';\n  form['salary'].value = '';\n\n  pushNotification(\n    10, 10, 'Success',\n    'Your data has been added.', 'success'\n  );\n});\n\n// form validation\nfunction validation() {\n  if (form['name'].value.length < 4) {\n    pushNotification(\n      10, 10, 'Wrong name',\n      'The entered name is too short.', 'error'\n    );\n\n    return false;\n  }\n\n  if (form['name'].value.match(/[^a-z ]/gi) !== null) {\n    pushNotification(\n      10, 10, 'Warning',\n      'There are unexpected characters in \"name\".', 'warning'\n    );\n\n    return false;\n  }\n\n  if (form['position'].value.length < 6) {\n    pushNotification(\n      10, 10, 'Wrong position',\n      'The entered position is too short.', 'error'\n    );\n\n    return false;\n  }\n\n  if (form['age'].value < 18 || form['age'].value > 90) {\n    pushNotification(\n      10, 10, 'Wrong age',\n      'Age value is less than 18 or more than 90.', 'error'\n    );\n\n    return false;\n  }\n\n  if (form['salary'].value.replace(/\\D/g, '') === null\n  || form['salary'].value.length < 5 || form['salary'].value.length > 8) {\n    pushNotification(\n      10, 10, 'Wrong salary',\n      'Wrong salary.', 'error'\n    );\n\n    return false;\n  }\n}\n\n// cells editing\ntBody.addEventListener('dblclick', e => {\n  const targetData = e.target.closest('td');\n  const input = document.createElement('input');\n  const targetDataValue = targetData.innerHTML;\n\n  input.classList.add('cell-input');\n  input.style.width = window.getComputedStyle(targetData).width;\n\n  targetData.innerHTML = '';\n  targetData.append(input);\n\n  input.focus();\n\n  input.addEventListener('blur', blurEvent => {\n    if (input.value === '') {\n      targetData.innerHTML = targetDataValue;\n\n      return;\n    }\n\n    targetData.innerHTML = input.value;\n  });\n});\n"]}